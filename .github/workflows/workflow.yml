name: Tag Workflow

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Sync strawhouse-backend
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout original strawhouse repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures fetching the tag information

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      # Step 3: Setup Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Install dependencies
      - name: Install protoc
        run: |
          sudo apt-get update > /dev/null
          sudo apt-get install -y protobuf-compiler > /dev/null
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          export PATH="$PATH:$(go env GOPATH)/bin"

      # Step 4: Sync driver to strawhouse-go
      - name: Sync driver to strawhouse-go
        run: |
          rm -r .git
          git clone https://github.com/strawstacks/strawhouse-go.git
          find strawhouse-go -mindepth 1 ! -path '*/.git*' ! -path '*.md' -exec rm -rf {} +
          cp -r strawhouse-driver/* strawhouse-go
          mkdir -p strawhouse-go/pb
          protoc --go_out=./strawhouse-go --go-grpc_out=./strawhouse-go ./strawhouse-proto/**/*.proto
          sed -i 's|strawhouse/strawhouse-driver|strawhouse-go|g' strawhouse-go/go.mod
          sed -i 's|strawhouse/strawhouse-proto|strawhouse-go|g' strawhouse-go/*.go

      # Step 5: Push changes to strawhouse-go
      - name: Push changes to strawhouse-go
        run: |
          cd strawhouse-go
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Sync driver on strawhouse tag ${{ github.ref_name }}"
          git tag -a ${{ github.ref_name }} -m "Sync driver on strawhouse tag ${{ github.ref_name }}"
          git push https://bsthun:${{ secrets.PAT_TOKEN }}@github.com/strawstacks/strawhouse-go.git main
          curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" -d '{"tag_name": "${{ github.ref_name }}", "name": "${{ github.ref_name }}", "body": "Sync driver on strawhouse tag ${{ github.ref_name }}"}' https://api.github.com/repos/strawstacks/strawhouse-go/releases

      # Step 6: Build docker
      - name: Build docker
        run: |
          docker login --username bsthun --password ${{ secrets.PAT_TOKEN }} ghcr.io
          BUILDX_NO_DEFAULT_ATTESTATIONS=1 \
            docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag ghcr.io/strawstacks/strawhouse-backend:${{ github.ref_name }} \
            --tag ghcr.io/strawstacks/strawhouse-backend:latest \
            --push .

      # Step 7: Build binary
      - name: Build binary
        run: |
          make protoc
          make release
          RELEASE=$(curl -s -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}"  "https://api.github.com/repos/strawstacks/strawhouse/releases/tags/${{ github.ref_name }}" | jq -r '.id')
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawhousebackd_linux_amd64" "https://uploads.github.com/repos/strawstacks/strawhouse/releases/$RELEASE/assets?name=strawhousebackd_linux_amd64"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawhousebackd_linux_arm64" "https://uploads.github.com/repos/strawstacks/strawhouse/releases/$RELEASE/assets?name=strawhousebackd_linux_arm64"

  build-command:
    name: Build strawhouse-command
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build strawhouse-command
        run: |
          brew update > /dev/null
          brew install protobuf > /dev/null
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          make protoc
          mkdir -p ./.local/release
          GOARCH=${{ matrix.arch }} GOOS=darwin go build -o ./.local/release/strawc_darwin_${{ matrix.arch }} ./strawhouse-command/
          RELEASE=$(curl -s -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}"  "https://api.github.com/repos/strawstacks/strawhouse/releases/tags/${{ github.ref_name }}" | jq -r '.id')
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary "@./.local/release/strawc_darwin_${{ matrix.arch }}" "https://uploads.github.com/repos/strawstacks/strawhouse/releases/$RELEASE/assets?name=strawc_darwin_${{ matrix.arch }}"